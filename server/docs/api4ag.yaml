openapi: 3.0.2
info:
  version: 1.0.0
  title: クラウドストレージ API仕様
  description: クラウドストレージのAPI仕様
servers:
  - url: https://my.server.is.here
paths:
  /api/login:
    post:
      summary: ユーザ認証を実行しアクセストークンを取得
      description: 
        各APIにアクセスするためにはアクセストークンを取得しhttp-headerに埋めこむ必要がある。トークンの有効期限は24時間。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuth'
      responses:
        '200':
          description: 
            アクセストークンを返却する。本トークン文字列(token)をhttp
            headerに埋めこむことで棚scanのapiにアクセス可能となる。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuthRes'
        '400':
          description: 何らかの原因で認証に失敗した場合
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuthResError'
                
  '/api/v1/files/{fileId}/timestamp/grant':
    post:
      summary: 指定のファイルにタイムスタンプを付与
      description: 指定のファイル（fileId）にタイムスタンプを付与する。
      security:
        - TokenAuth: []
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 
            アクセストークンを返却する。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrantTimestampRes'
        '400':
          description: 何らかの原因でタイムスタンプの付与に失敗した場合
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrantTimestampResError'

  /api/v1/files:
    post:
      summary: ファイルをアップロード
      description: ファイルをアップロードする
      security:
        - TokenAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Uploadfiles'
      responses:
        '200':
          description: 
            アクセストークンを返却する。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadfilesRes'
        '400':
          description: 何らかの原因でファイルアップロードに失敗した場合
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadfilesResError'

  /api/v1/files/download:
    get:
      summary: ファイルをダウンロード
      description: ファイルをダウンロードする
      security:
        - TokenAuth: []
      parameters:
        - in: query
          name: file_id
          schema:
            type: string
          description: ファイルアップロード時に取得したファイルid
      responses:
        '200':
          description: ファイル
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          description: 何らかの原因でファイルアップロードに失敗した場合
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadfilesResError'


components:
  securitySchemes:
    TokenAuth:
      type: apiKey
      name: x-auth-cloud-storage
      in: header
      description: JWT形式のトークンをapiKeyとして利用する。
  schemas:
    UserAuth:
      required:
        - account_name
        - password
        - tenant_name
      properties:
        tenant_name:
          type: string
          example: tenant01
          description: 
            テナントの名称を指定。
        account_name:
          type: string
          example: user01
          description: アカウント名を指定。
        password:
          type: string
          example: user01password
          description:
            平文のパスワードを指定。
    UserAuthRes:
      properties:
        status:
          $ref: '#/components/schemas/UserAuthResStatus'
        body:
          $ref: '#/components/schemas/UserAuthResBody'
    UserAuthResStatus:
      properties:
        success:
          type: boolean
          example: true
          description:
            リクエストの成功(true)固定
        message:
          type: string
          example: ユーザ認証に成功しました
          description:
            「ユーザ認証に成功しました」固定
    UserAuthResStatusError:
      properties:
        success:
          type: boolean
          example: false
          description:
            リクエストの失敗(false)固定
        message:
          type: string
          example: ユーザ認証に失敗しました
          description:
            「ユーザ認証に失敗しました」固定
        errors:
          $ref: '#/components/schemas/UserAuthResStatusErrors'
    UserAuthResStatusErrors:
      description:
        エラーの場合、オジェクト内にエラー箇所をキーにして詳細情報が格納される。
      properties:
        account_name:
          type: string
          example: アカウント名が空のためユーザ認証に失敗しました
          description: account_nameに関するエラー
        password:
          type: string
          example: アカウント名またはパスワードが不正のため認証に失敗しました
          description: passwordに関するエラー
        tenant_name:
          type: string
          example: アカウント名が空のためユーザ認証に失敗しました
          description: tenant_nameに関するエラー
        unknown:
          type: string
          example: 例外が発生しました
          description: 不明な箇所に関するエラー
    UserAuthResBody:
      properties:
        token:
          type: string
          example: xxxxyyyyyzzzz
          description: 
            apiアクセスに利用するjwtの文字列。
        user:
          $ref: '#/components/schemas/User'
    User:
      properties:
        _id: 
          description: ユーザのプライマリキー
          type: string
          example: 59f04c46468d5c6897e9fac6
        type: 
          description: ユーザ種別
          type: string
          example: user
        account_name:
          description: ログインID
          type: string
          example: hanako
        name:
          description: ユーザの表示名
          type: string
          example: 花子
        email:
          description: メールアドレス
          type: string
          example: test
        enabled:
          description: ユーザが有効/無効
          type: boolean
          example: true
        tenant_id:
          description: テナントのプライマリキー
          type: string
          example: 59f04c45468d5c6897e9fac3
        groups:
          type: array
          items:
            description: グループのプライマリキー
            type: string
          example: 
            - 59f04c45468d5c6897e9fac3
        tenant:
          $ref: '#/components/schemas/Tenant'
    Tenant:
      properties:
        _id: 
          description: テナントのプライマリキー(上位オブジェクトのtenant_idと同じ)
          type: string
          example: 59f04c45468d5c6897e9fac3
        name:
          description: テナント名(顧客名)
          type: string
          example: test
        home_dir_id:
          description: テナントのホームディレクトリのプライマリキー
          type: string
          example: 59f04c44468d5c6897e9fabe
        trash_dir_id:
          description: ごみ箱のプライマリキー
          type: string
          example: 59f04c44468d5c6897e9fabf
        threshold:
          description: 容量制限の値
          type: integer
          example: 107374182400
    UserAuthResError:
      properties:
        status:
          $ref: '#/components/schemas/UserAuthResStatusError'
    GrantTimestampRes:
      properties:
        status:
          $ref: '#/components/schemas/GrantTimestampResStatus'
        body:
          $ref: '#/components/schemas/GrantTimestampResBody'
    GrantTimestampResError:
      properties:
        status:
          $ref: '#/components/schemas/GrantTimestampResStatusError'
    GrantTimestampResStatus:
      properties:
        success:
          type: boolean
          example: true
          description:
            リクエストの成功(true)固定
    GrantTimestampResStatusError:
      properties:
        success:
          type: boolean
          example: false
          description:
            リクエストの失敗(false)固定
        message:
          type: string
          example: タイムスタンプの発行に失敗しました
          description:
            「タイムスタンプの発行に失敗しました」固定
        errors:
          type: object
          example: {}
          description:
            empty固定
    GrantTimestampResBody:
      properties:
        meta_info:
          description:
            ファイルの付帯情報
          properties:
            _id:
              description: meta_infoのプライマリーキー
              type: string
              example: 5d09f2497a498000cb59be93
            label:
              type: string
              example: タイムスタンプ
              description: 「タイムスタンプ」固定
            name:
              type: string
              example: timestamp
              description: 「timestamp」固定
            value_type:
              type: string
              example: Array
              description: 「Array」固定
            meta_info_id:
              type: string
              example: 5d09f2497a498000cb59be93
              description: _idと同じ
            sort_target:
              type: string
              example: null
              description: null固定
            value:
              type: array
              items:
                properties:
                  cyberTSA:
                    type: boolean
                    example: true
                    description: true固定
                  stampedDate:
                    type: string
                    example: 2019-06-20T05:23:16.537Z
                    description: タイムスタンプ日時
                  expirationDate:
                    type: string
                    example: 2029-10-25T08:01:36.000Z
                    description: タイムスタンプトークンの有効期限
                  isCyberTSA: 
                    type: boolean
                    example: true
                    description: true固定
                  token:
                    description: タイムスタンプトークン
                    type: string
                    format: base64
                    example:
                      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
                  hashAlgorithm: 
                    description: タイムスタンプトークン生成ハッシュアルゴリズム
                    type: string
                    example: SHA-256
                  hash:
                    description: タイムスタンプトークン生成ハッシュ
                    example: dcDJijI86MPv4SXC6/s+n7lLYfmFZNXoAiqoTQbE0QI=
                  status:
                    description: 「Success」固定
                    type: string
                    example: Success
                  verifiedDate:
                    description: タイムスタンプトークンの最終検証日時
                    type: string
                    example: 2019-06-20T05:23:16.582Z
                  errors:
                    type: array
                    example: []
        
    Uploadfiles:
      properties:
        dir_id:
          type: string
          example: null
          description: 
            null固定
        files:
          type: array
          items:
            properties:
              name:
                type: string
                example: file.pdf
                description: ファイル名。禁止文字は、[\, / , :, *, ?, <, >, |]
              mime_type:
                type: string
                example: application/pdf
                description: ファイルのmimeタイプ
              size:
                type: integer
                example: 123564
                description: ファイルのサイズ
              base64:
                type: string
                format: base64
                example: xxxxxxx
                description: base64エンコードしたファイル
              checksum:
                type: string
                example: xxxxxx
                description: ファイルのチェックサム(md5, hex)
              authorities:
                type: array
                example: []
                description: 空配列固定
              tags:
                type: array
                items:
                  properties:
                    tag:
                      type: string
                      example: 59f04c44468d5c6897e9fabe
                      description: タグのプライマリーキー(***)
                      
    UploadfilesRes:
      properties:
        status:
          properties:
            success:
              type: boolean
              example: true
              description: true固定
        body:
          type: array
          items:
            $ref: '#/components/schemas/UploadfilesResBodyItem'
        
    UploadfilesResError:
      properties:
        status:
          properties:
            success:
              type: boolean
              example: false
              description: false固定
            message:
              type: string
              example: ファイルのアップロードに失敗しました
              description: 「ファイルのアップロードに失敗しました」固定
            errors:
              description: エラーの場合、オジェクト内にエラー箇所をキーにして詳細情報が格納される。
              properties:
                name:
                  type: string
                  example: ファイル名が空のためファイルのアップロードに失敗しました
                mime_type:
                  type: string
                  example: mime_typeが空のためファイルのアップロードに失敗しました
                size:
                  type: integer
                  example: size is empty
                base64:
                  type: string
                  example: base64が空のためファイルのアップロードに失敗しました
                checksum:
                  type: string
                  example: checksumが不正のためファイルのアップロードに失敗しました
                data:
                  type: string
                  example: ファイル本体の保存に失敗しました
                files:
                  type: string
                  example: アップロード対象のファイルが空のためファイルのアップロードに失敗しました
                unknown:
                  type: string
                  example: 例外が発生しました
    
    UploadfilesResBodyItem:
      properties:
        __v:
          type: integer
          example: 0
          description: 更新回数
        name:
          type: string
          example: file.pdf
          description: アップロード時に指定したファイル名
        mime_type:
          type: string
          example: application/pdf
          description: アップロード時に指定したmimeタイプ
        size:
          type: integer
          example: 123564
          description: アップロード時に指定したファイルサイズ
        is_dir:
          type: boolean
          example: false
          description: false固定
        dir_id:
          type: string
          example: 59f04c44468d5c6897e9fabe
          description: 親フォルダのid
        is_display:
          type: boolean
          example: true
          description: true固定
        is_star:
          type: boolean
          example: false
          description: my favorite チェックが入っているかどうか
        _id:
          type: string
          example: 59f04c44468d5c6897e9fabe
          description: 生成されたファイルid。タイムスタンプ捺印APIやファイルのダウンロードAPIには、このidを指定する。
        is_crypted:
          type: boolean
          example: false
          description: false固定
        authority_files:
          type: array
          items:
            properties:
              __v:
                type: integer
          description: 権限情報。詳細は省略。
        histories:
          type: array
          items:
            properties:
              body:
                type: string
          description: 操作履歴情報。詳細は省略。
        tags:
          type: array
          items:
            properties:
              tag:
                type: string
          description: タグ情報。詳細は省略。
        is_deleted:
          type: string
          example: false
          description: false固定
        modified:
          type: string
          example: 2017-10-28T07:44:09.000Z
          description: 更新日時

    DownloadfilesResError:
      properties:
        status:
          properties:
            success:
              type: boolean
              example: false
              description: false固定
            message:
              type: string
              example: ファイルのダウンロードに失敗しました
              description: 「ファイルのダウンロードに失敗しました」固定
            errors:
              description: エラーの場合、オジェクト内にエラー箇所をキーにして詳細情報が格納される。
              properties:
                file_id:
                  type: string
                  example: ファイルIDが空のためファイルのダウンロードに失敗しました
                unknown:
                  type: string
                  example: 例外が発生しました
